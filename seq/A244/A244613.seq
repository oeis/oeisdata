%I A244613 #17 Jul 08 2014 00:19:38
%S A244613 1,8,28,328,1328,11328
%N A244613 Least number k > 0 such that 2^k ends in exactly n consecutive increasing digits.
%C A244613 For n = {1, 2, 3, 4, 5, 6}, the n consecutive increasing digits, given by 2^a(n)%10^n, are {2, 56, 456, 3456, 23456, 123456}, respectively.
%C A244613 There are 12500 possible 6-digit endings for 2^k. There are no k-values such that 2^k ends in '234567', '345678', or '456789'. The k-values for which 2^k ends in '123456' are given by 11328 mod 12500. For k = 11328 + 12500*x, the digit immediately before the run of '123456' is {1, 3, 5, 7, 9, 1, 3, 5, 7, 9, 1, 3, ...} for x = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ...}, respectively. Thus, we see the digit before will never be 0. So, this sequence is full.
%e A244613 2^8 = 256 ends in '56'. Thus a(2) = 8.
%e A244613 2^28 ends in '456'. Thus a(3) = 28.
%o A244613 (PARI) a(n)=for(k=1,10^6,st=2^k;c=0;if(#Str(st)>n,for(i=1,n,if(((st-(st%10^(i-1)))/10^(i-1))%10==((st-(st%10^i))/10^i)%10+1,c++));if(c==n,return(k))))
%o A244613 n=0;while(n<10,print1(a(n),", ");n++)
%o A244613 (Python)
%o A244613 def a(n):
%o A244613   for k in range(1,10**5):
%o A244613     st = str(2**k)
%o A244613     if len(st) > n:
%o A244613       count = 0
%o A244613       for i in range(len(st)):
%o A244613         if int(st[len(st)-1-i]) == int(st[len(st)-2-i])+1:
%o A244613           count += 1
%o A244613         else:
%o A244613           break
%o A244613       if count == n:
%o A244613         return k
%o A244613 n = 0
%o A244613 while n < 10:
%o A244613   print(a(n),end=', ')
%o A244613   n += 1
%K A244613 nonn,base,fini,full
%O A244613 1,2
%A A244613 _Derek Orr_, Jul 02 2014
