%I A258274 #25 Jul 01 2023 14:27:53
%S A258274 1,2,3,4,9,19,44,94,194,294,394,494,594,694,794,894,994,1094,1194,
%T A258274 1294,1394,1494,1594,1694,1794,1894,1994,2094,2194,2294,2394,2494,
%U A258274 2594,2694,2794,2894,2994
%N A258274 The smallest number of cents which cannot be made with fewer than n American coins.
%C A258274 a(n) is the smallest amount (in cents) that cannot be made with fewer than n coins.
%C A258274 The coins included are those in common circulation in the USA: 1¢, 5¢, 10¢, 25¢, 50¢ and $1 (100 cents).
%H A258274 Matthew Scroggs, <a href="/A258274/b258274.txt">Table of n, a(n) for n = 1..10006</a>
%H A258274 <a href="/index/Rec#order_02">Index entries for linear recurrences with constant coefficients</a>, signature (2, -1).
%F A258274 From _Robert Israel_, May 31 2015: (Start)
%F A258274 a(n) = 100*n - 706 for n >= 8.
%F A258274 G.f.: x*(1 + 4*x^4 + 5*x^5 + 15*x^6 + 25*x^7 + 50*x^8)/(1-x)^2. (End)
%e A258274 The smallest value that requires 5 coins is 9¢ (5¢, 1¢, 1¢, 1¢ and 1¢). Therefore a(5)=9.
%o A258274 (Python) #
%o A258274 coins = [1,5,10,25,50,100]
%o A258274 need = [0]
%o A258274 while True:
%o A258274     next = len(need)
%o A258274     n_need = next
%o A258274     for coin in coins:
%o A258274         if coin>next:
%o A258274             break
%o A258274         n_need = min(n_need,1+need[next-coin])
%o A258274     need.append(n_need)
%o A258274     if n_need == len(seq):
%o A258274         print(next)
%Y A258274 Cf. A258272.
%K A258274 nonn,easy
%O A258274 1,2
%A A258274 _Matthew Scroggs_, May 25 2015
