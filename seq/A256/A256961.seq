%I A256961 #35 Apr 20 2015 21:01:21
%S A256961 6,5,26,14,16,9,11,30,4,92,31,64,28,44,46,22,52,126,256,197,230,110,
%T A256961 125,13,21,196,336,684,462,632,852,1208,780,1278,544,796,520,8,3864,
%U A256961 98,1782,5316,6372,7714,7274,3818,4254,9046,6412,2168,2856,2148,1206,3246
%N A256961 Generated by a rearranging problem (see links for precise definition).
%H A256961 Alois P. Heinz, Chai Wah Wu and Christian Perfect <a href="/A256961/b256961.txt">Table of n, a(n) for n = 1..5000</a> (Terms 1..100 by Alois P. Heinz; terms 101..137 by Chai Wah Wu; terms 138..5000 by Christian Perfect)
%H A256961 Popular Computing (Calabasas, CA), <a href="/A256961/a256961.png">Contest 15: Coding Fun and Profit: Rearranging All The Numbers</a>, Vol. 5 (#57, Dec 1977), page PC57-2.
%H A256961 Popular Computing (Calabasas, CA), <a href="/A256961/a256961_2.png">Contest 15: Coding Fun and Profit: Rearranging All The Numbers</a>, Vol. 5 (#57, Dec 1977), page PC57-1 (front cover).
%o A256961 (Python)
%o A256961 def flip(i,n):
%o A256961   m = i%n
%o A256961   m2 = n-m-1
%o A256961   return i-m+m2
%o A256961  
%o A256961 def revert(i,moves):
%o A256961   for move,leader in reversed(moves):
%o A256961     if i==leader-1:
%o A256961       i=0
%o A256961     else:
%o A256961       i+=1
%o A256961     
%o A256961     i = flip(i,move)
%o A256961   return i+3
%o A256961  
%o A256961 def a256961():
%o A256961   moves = []
%o A256961   while True:
%o A256961     move = revert(0,moves)
%o A256961     leader = revert(move-1,moves)
%o A256961     out = revert(flip(leader,move),moves)
%o A256961     yield out
%o A256961     moves.append((move,leader))
%o A256961 # _Christian Perfect_, Apr 20 2015
%K A256961 nonn
%O A256961 1,1
%A A256961 _N. J. A. Sloane_, Apr 15 2015
%E A256961 More terms from _Alois P. Heinz_, Apr 16 2015
%E A256961 More terms from _Christian Perfect_, Apr 20 2015
