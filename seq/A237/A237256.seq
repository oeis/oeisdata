%I A237256 #37 Feb 16 2025 08:33:21
%S A237256 5,29,41609,4287599,16254449,87130709,118916729,157119089,173797289,
%T A237256 180210059,207959879,309740999,349066439,356259989,401519399,
%U A237256 473953229,705480749,912950249,994719629
%N A237256 Smallest member of Sophie Germain pair, wherein each member of the prime pair is the smallest of its prime quadruplets (p, p+2, p+8, p+12).
%C A237256 It is not known if there are infinitely many Sophie Germain pairs with this property.
%H A237256 Abhiram R Devesh and Dana Jacobsen, <a href="/A237256/b237256.txt">Table of n, a(n) for n = 1..1155</a> [first 155 terms from Abhiram R Devesh]
%H A237256 Eric Weisstein's World of Mathematics, <a href="https://mathworld.wolfram.com/SophieGermainPrime.html">Sophie Germain Prime</a>
%H A237256 Wikipedia, <a href="http://en.wikipedia.org/wiki/Sophie_Germain_prime">Sophie Germain Prime</a>
%e A237256 a(1): p = 5; (2*p)+1 = 11; prime quadruplets (5,7,13,17); (11,13,19,23).
%e A237256 a(2): p = 29; (2*p)+1 = 59; prime quadruplets (29,31,37,41); (59,61,67,71).
%o A237256 (Python)
%o A237256 p1=2
%o A237256 n=2
%o A237256 count=0
%o A237256 while p1>2:
%o A237256     ## Generate the a chain of numbers with length 4
%o A237256     cc=[]
%o A237256     cc.append(p1)
%o A237256     for i in range(1, n):
%o A237256         cc.append((2**(i)*p1+((2**i)-1)))
%o A237256     ## chain entries + 2
%o A237256     cc2=[c+2 for c in cc]
%o A237256     ## chain entries + 8
%o A237256     cc8=[c+8 for c in cc]
%o A237256     ## chain entries + 12
%o A237256     cc12=[c+12 for c in cc]
%o A237256     ## check if cc is a Sophie Germain Pair or not
%o A237256     ## pf.isp_list returns True or false for a given list of numbers
%o A237256     ##             if they are prime or not
%o A237256     ##
%o A237256     pcc=pf.isp_list(cc)
%o A237256     pcc2=pf.isp_list(cc2)
%o A237256     pcc8=pf.isp_list(cc8)
%o A237256     pcc12=pf.isp_list(cc12) ....## Number of primes for cc
%o A237256     npcc=pcc.count(True)
%o A237256     ## Number of primes for cc2
%o A237256     npcc2=pcc2.count(True)
%o A237256     ## Number of primes for cc8
%o A237256     npcc8=pcc8.count(True)
%o A237256     ## Number of primes for cc12
%o A237256     npcc12=pcc12.count(True)
%o A237256     if npcc==n and npcc2==n and npcc8==n and npcc12==n:
%o A237256         print "For length ", n, " the series is : ", cc, " ,", cc2," , ",cc8, " and " cc12
%o A237256     p1=pf.nextp(p1)
%o A237256 (PARI) forprime(p=1, 1e9, my(t=2*p+1); if(isprime(t) && isprime(p+2) && isprime(p+8) && isprime(p+12) && isprime(t+2) && isprime(t+8) && isprime(t+12), print1(p, ", "))) \\ _Felix Fr√∂hlich_, Jul 26 2014
%o A237256 (Perl) use ntheory ":all"; my @p = sieve_prime_cluster(1,2e9,2,8,12); my %h; undef @h{@p}; for (@p) { say if exists $h{2*$_+1} } # _Dana Jacobsen_, Oct 03 2015
%Y A237256 Cf. A005384, A233540.
%K A237256 nonn
%O A237256 1,1
%A A237256 _Abhiram R Devesh_, Feb 05 2014
