%I A072283 #11 Jan 15 2017 12:08:50
%S A072283 7,5,6,6,7,6,7,8,7,6,8,6,7,7,8,7,8,9,8,7,9,7,8,8,9,8,9,10,9,8,9,7,8,8,
%T A072283 9,8,9,10,9,8,10,8,9,9,10,9,10,11,10,9,9,7,8,8,9,8,9,10,9,8,10,8,9,9,
%U A072283 10,9,10,11,10,9,11,9,10,10,11,10,11,12,11,10,10,8,9,9,10,9,10,11,10,9
%N A072283 Number of raised dots to represent n in Braille.
%C A072283 Each term of this sequence includes 4, the number of raised dots to represent the numeral sign. This is normally necessary since the representations of the numerals "1" through "9" and then "0" are otherwise identical to the representations of the letters "a" through "j", respectively. In some contexts the numeral sign is unnecessary.
%H A072283 Indranil Ghosh, <a href="/A072283/b072283.txt">Table of n, a(n) for n = 0..50000</a>
%H A072283 RNIB, <a href="http://www.rnib.org.uk/wesupply/fctsheet/thisisbr.htm">This is Braille</a>
%F A072283 The decimal digits map to numbers of Braille raised dots as follows: 0 -> 3, 1 -> 1, 2 -> 2, 3 -> 2, 4 -> 3, 5 -> 2, 6 -> 3, 7 -> 4, 8 -> 3 and 9 -> 2.
%e A072283 a(10) = 8 because "10" is represented by the numeral sign "#" (4 raised dots), the digit one (1 raised dot) and digit zero (3 raised dots) and 4 + 3 + 1 = 8. Here is a depiction of the Braille representation, where "o" denotes a raised dot, "-" denotes unused space and each Braille character occupies a 3 X 2 cell:
%e A072283 -o o- -o
%e A072283 -o -- oo
%e A072283 oo -- --
%o A072283 (Python)
%o A072283 B=[3,1,2,2,3,2,3,4,3,2]
%o A072283 def A072283(n):
%o A072283     s=0
%o A072283     for i in str(n):
%o A072283         s+=B[int(i)]
%o A072283     return s+4 # _Indranil Ghosh_, Jan 13 2017
%Y A072283 Equals A079399(n) + 4.
%K A072283 base,nonn
%O A072283 0,1
%A A072283 _Rick L. Shepherd_, Jul 10 2002
